syntax = "proto3";

package customer;

option go_package = "proto/customer;customer";

service Customer {
    rpc CreateCustomer(CreateCustomerRequest) returns (CreateCustomerResponse);
    rpc GetCustomer(GetCustomerRequest) returns (GetCustomerResponse);
    rpc SubmitOrder(SubmitOrderRequest) returns (SubmitOrderResponse);
    rpc GetUnpaidOrders(GetUnpaidOrdersRequest) returns (GetUnpaidOrdersResponse);
    rpc DeactivateCustomer(DeactivateCustomerRequest) returns (DeactivateCustomerResponse);
    rpc ActivateCustomer(ActivateCustomerRequest) returns (ActivateCustomerResponse);
    rpc StoreBalance(StoreBalanceRequest) returns (StoreBalanceResponse);
}

message CustomerEntity {
    uint64 customer_id = 1;
    string name = 2;
    string status = 3;
    float balance = 4;
}

message CreateCustomerRequest {
    string customer_name = 1;
}

message CreateCustomerResponse {
    uint64 customer_id = 1;
    bool success = 2;
}

message GetCustomerRequest {
    uint64 customer_id = 1;
}

message GetCustomerResponse {
    CustomerEntity customer = 1;
}

message DeactivateCustomerRequest {
    uint64 customer_id = 1;
}

message DeactivateCustomerResponse {
    string status = 1;
}

message ActivateCustomerRequest {
    uint64 customer_id = 1;
}

message ActivateCustomerResponse {
    string status = 1;
}

message SubmitOrderRequest {
    uint64 customer_id = 1;
    repeated OrderItem order_items = 2;
}

message SubmitOrderResponse {
    bool success = 1;
    string message = 2;
}

message OrderItem {
    string product_code = 1;
    float unit_price = 2;
    int32 quantity = 3;
}

message Order {
    uint64 order_id = 1;
    repeated OrderItem items = 2;
    string status = 3;
}

message GetUnpaidOrdersRequest {
    uint64 customer_id = 1;
}

message GetUnpaidOrdersResponse {
    repeated Order unpaid_orders = 1;
}

message StoreBalanceRequest {
    uint64 customer_id = 1;
    float balance = 2;
}

message StoreBalanceResponse {
    string message = 1;
}